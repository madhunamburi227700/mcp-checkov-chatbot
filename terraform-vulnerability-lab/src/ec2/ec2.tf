# ----------------------------
# IAM Role + Instance Profile
# ----------------------------

resource "aws_iam_role" "ec2_role" {
  name = "ec2_role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = "sts:AssumeRole",
        Effect = "Allow",
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_instance_profile" "ec2_instance_profile" {
  name = "ec2_instance_profile"
  role = aws_iam_role.ec2_role.name
}

# ----------------------------
# Network Resources
# ----------------------------

resource "aws_default_subnet" "insecure_subnet" {
  availability_zone = "${var.region}-1a"

  tags = {
    Name        = "insecure_subnet"
    Description = "Default insecure subnet."
  }
}

resource "aws_security_group" "secure_sg" {
  name        = "secure-sg"
  description = "Security group with restricted access."

  # ✅ Restricted SSH (port 22) to a trusted IP range
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["203.0.113.0/24"]
    description = "SSH access from trusted IPs"
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["203.0.113.0/24"]
    description = "Allow HTTP from trusted IPs"
  }

  # ✅ Description added to egress rule
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["192.168.1.0/24"]
    description = "Allow all outbound traffic to internal network"
  }

  tags = {
    Name        = "insecure_security_group"
    Description = "Default insecure security group."
  }
}

# ----------------------------
# EC2 Instance
# ----------------------------

resource "aws_instance" "insecure_instance" {
  ami                         = "ami-123456"
  instance_type               = "t2.micro"
  associate_public_ip_address = false
  key_name                    = "insecure-key"
  security_groups             = [aws_security_group.secure_sg.name] # ✅ FIXED: now uses secure_sg
  monitoring                  = true
  ebs_optimized               = true
  iam_instance_profile        = aws_iam_instance_profile.ec2_instance_profile.name # ✅ FIXED

  root_block_device {
    encrypted   = true
    volume_size = 8
    volume_type = "standard"
  }

  user_data = templatefile("templates/linux_userdata.tpl", {
    AWS_ACCESS_KEY_ID     = var.aws_access_key_id
    AWS_SECRET_ACCESS_KEY = var.aws_secret_access_key
    AWS_DEFAULT_REGION    = var.aws_region
  })

  metadata_options {
    http_tokens = "required"
  }

  tags = {
    Name        = "insecure_instance"
    Description = "Insecure AWS EC2 instance."
  }
}

# ----------------------------
# EBS Volume + Attachment
# ----------------------------

resource "aws_ebs_volume" "insecure_volume" {
  availability_zone = "eu-west-1a"
  encrypted         = true
  size              = 40
  kms_key_id        = "your-kms-key-id" # Add this line with your KMS key ID

  tags = {
    Name        = "insecure_volume"
    Description = "Insecure AWS EBS volume."
  }
}

resource "aws_volume_attachment" "insecure_volume_attachment" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.insecure_volume.id
  instance_id = aws_instance.insecure_instance.id
}
